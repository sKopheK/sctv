@use "config/breakpoints" as bp;

@mixin mediaPrint
{
    @media only print
    {
        @content;
    }
}

@mixin mediaScreen
{
    @media only screen
    {
        @content;
    }
}

@mixin mediaWidth($args...)
{
    @if length($args) > 0 and nth($args, 1) != false
    {
        @each $type in $args
        {
            @if $type == "tablet"
            {
                @media only screen and (min-width: bp.$tablet) and (max-width: bp.$desktop - .1)
                {
                    @content;
                }
            }
            @else if ($type == "desktop")
            {
                @media only screen and (min-width: bp.$desktop)
                {
                    @content;
                }
            }
            @else if ($type == "mobile")
            {
                @media only screen and (max-width: bp.$tablet - .1)
                {
                    @content;
                }
            }
            @else
            {
                @if length($type) == 1
                {
                    @media only screen and (min-width: $type)
                    {
                        @content;
                    }
                }
                @else if (length($type) == 2)
                {
                    $min: nth($type, 1);
                    $max: nth($type, 2);

                    @if $min != null and $max != null
                    {
                        @media only screen and (min-width: $min) and (max-width: $max + .9)
                        {
                            @content;
                        }
                    }
                    @else if ($min != null)
                    {
                        @media only screen and (min-width: $min)
                        {
                            @content;
                        }
                    }
                    @else if ($max != null)
                    {
                        @media only screen and (max-width: $max + .9)
                        {
                            @content;
                        }
                    }
                }
            }
        }
    }
    @else
    {
        @content;
    }
}

@mixin mediaTablet
{
    @include mediaWidth(bp.$tablet)
    {
        @content;
    }
}

@mixin mediaDesktop
{
    @include mediaWidth(bp.$desktop)
    {
        @content;
    }
}

// IE10-11 (NOTE: does not work inside another media query)
@mixin IeFix($args...)
{
    $ieSuffix: ' and (-ms-high-contrast: none), (-ms-high-contrast: active)';

    @if length($args) == 0
    {
        @media #{all + $ieSuffix}
        {
            @content;
        }
    }
    @else
    {
        @each $type in $args
        {
            $w: null;

            @if length($type) == 1
            {
                $w: 'all and (min-width: #{$type})';
            }
            @else if (length($type) == 2)
            {
                $min: nth($type, 1);
                $max: nth($type, 2);

                @if $min != null and $max != null
                {
                    $w: 'all and (min-width: #{$min}) and (max-width: #{$max})';
                }
                @else if ($min != null)
                {
                    $w: 'all and (min-width: #{$min})';
                }
                @else if ($max != null)
                {
                    $w: 'all and (max-width: #{$max})';
                }
            }

            @if $w != null
            {
                @media #{$w + $ieSuffix}
                {
                    @content;
                }
            }
        }
    }
}

@mixin edgeFix
{
    // Edge
    @supports (-ms-ime-align:auto)
    {
        @content;
    }
}

@mixin safariFix
{
    _::-webkit-full-page-media,
    _:future
    {
        @content;
    }
}