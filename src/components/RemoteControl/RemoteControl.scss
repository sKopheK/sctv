@use "color";
@use "dim";
@use "media";
@use "../../scss/mixins" as *;
@use "../../scss/media" as *;
@use "../../scss/config/breakpoints" as bp;

.RemoteControl
{
    $scale-default: .9;
    $scale-active: 1;
    $bottom-position-const: -.82;

    font-size: 1rem;
    
    @include mediaWidth(bp.$base)
    {
        font-size: 1vw;
    }

    width: dim.$width;
    min-width: dim.$width--min;
    height: dim.$height--portrait;
    min-height: dim.$height--min-portrait;
    
    position: absolute;
    right: 50%;
    bottom: dim.$height--portrait * $bottom-position-const;
    box-sizing: border-box;
    
    padding: 1.1em .6em;

    background-color: color.$bg-main;
    border: 1px solid color.$border;
    border-radius: dim.$radius;
    transform: translateX(50%) scale($scale-default);
    
    transition: transform .5s, box-shadow .5s, border-width .5s, bottom .5s, opacity 1s;
    opacity: 1;

    @include media.positionRight
    {
        right: dim.$right;
        transform: scale($scale-default);
        padding-bottom: 3.5em;
        height: dim.$height;
        min-height: dim.$height--min;
        bottom: dim.$height * -.82;
    }

    &::before
    {
        content: '';
        @include fill-parent;
        border-radius: dim.$radius;
        border: .125em solid color.$bg;
    }

    &:hover
    {
        transform: translateX(50%) scale($scale-active);
        box-shadow: 0 0 1.25em .926em color.$shadow;
        border-width: .125em;
        bottom: dim.$bottom--on;

        @include media.positionRight
        {
            transform: scale($scale-active);
        }

        &::before
        {
            border-width: .185em;
        }

        &.is-hidden
        {
            opacity: 1;
        }
    }
}

.content
{
    position: relative;
    z-index: 1;
    height: 100%;
}

.is-hidden
{
    opacity: 0;
}

.is-dev
{
    .is-hidden
    {    
        opacity: 1;
    }

    .RemoteControl
    {
        bottom: dim.$bottom--on;
    }
}